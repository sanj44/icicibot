{"version":3,"sources":["../src/middlewares.js"],"names":["createMiddleware","bp","middlewareName","_use","_error","use","middleware","TypeError","length","dispatch","event","isPlainObject","conformity","type","value","platform","text","raw","conformsTo","run","err","logger","error","message","module","exports","dataLocation","projectLocation","middlewaresFilePath","join","incoming","outgoing","middlewares","customizations","noopChain","arguments","JSON","stringify","warn","readCustomizations","existsSync","writeFileSync","parse","readFileSync","writeCustomizations","setCustomizations","each","name","order","enabled","resetCustomizations","register","handler","some","m","push","list","orderBy","map","customization","Object","assign","load","licenseMiddleware","debug","sendToMiddleware","mw","sendIncoming","sendOutgoing","getCustomizations"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAASC,EAAT,EAAaC,cAAb,EAA6B;AACpD,MAAMC,OAAO,sBAAb;AACA,MAAMC,SAAS,sBAAf;;AAEA,MAAMC,MAAM,SAANA,GAAM,CAASC,UAAT,EAAqB;AAC/B,QAAI,OAAOA,UAAP,KAAuB,UAA3B,EAAuC;AACrC,YAAM,IAAIC,SAAJ,CAAc,mDAAd,CAAN;AACD;;AAED,QAAID,WAAWE,MAAX,KAAsB,CAA1B,EAA6B;AAC3BL,WAAKG,UAAL;AACD,KAFD,MAEO,IAAIA,WAAWE,MAAX,KAAsB,CAA1B,EAA6B;AAClCJ,aAAOE,UAAP;AACD;AACF,GAVD;;AAYA,MAAMG,WAAW,SAAXA,QAAW,CAASC,KAAT,EAAgB;AAC/B,QAAI,CAAC,iBAAEC,aAAF,CAAgBD,KAAhB,CAAL,EAA6B;AAC3B,YAAM,IAAIH,SAAJ,CAAc,2DAAd,CAAN;AACD;;AAED,QAAMK,aAAa;AACjBC,YAAM,cAASC,KAAT,EAAgB;AAAE,eAAO,OAAOA,KAAP,KAAkB,QAAzB;AAAmC,OAD1C;AAEjBC,gBAAU,kBAASD,KAAT,EAAgB;AAAE,eAAO,OAAOA,KAAP,KAAkB,QAAzB;AAAmC,OAF9C;AAGjBE,YAAM,cAASF,KAAT,EAAgB;AAAE,eAAO,OAAOA,KAAP,KAAkB,QAAzB;AAAmC,OAH1C;AAIjBG,WAAK,eAAW;AAAE,eAAO,IAAP;AAAa;AAJd,KAAnB;;AAOA,QAAI,CAAC,iBAAEC,UAAF,CAAaR,KAAb,EAAoBE,UAApB,CAAL,EAAsC;AACpC,YAAM,IAAIL,SAAJ,CAAc,+CAClB,gDADI,CAAN;AAED;;AAED;AACAG,UAAMT,EAAN,GAAWA,EAAX;;AAEAE,SAAKgB,GAAL,CAAST,KAAT,EAAgB,UAASU,GAAT,EAAc;AAC5B,UAAIA,GAAJ,EAAS;AACPhB,eAAOe,GAAP,CAAWC,GAAX,EAAgBV,KAAhB,EAAuB,YAAM;AAC3BT,aAAGoB,MAAH,CAAUC,KAAV,gDAA6DpB,cAA7D,kBAAwFkB,IAAIG,OAA5F;AACD,SAFD;AAGD;AACF,KAND;AAOD,GA3BD;;AA6BA,SAAO,EAAElB,QAAF,EAAOI,kBAAP,EAAP;AACD,CA9CD;;AAgDAe,OAAOC,OAAP,GAAiB,UAASxB,EAAT,EAAayB,YAAb,EAA2BC,eAA3B,EAA4CN,MAA5C,EAAoD;AACnE,MAAMO,sBAAsB,eAAKC,IAAL,CAAUH,YAAV,EAAwB,kBAAxB,CAA5B;AACA,MAAII,iBAAJ;AAAA,MAAcC,iBAAd;AAAA,MAAwBC,oBAAxB;AAAA,MAAqCC,uBAArC;;AAEA,MAAMC,YAAY,SAAZA,SAAY,GAAW;AAC3B,QAAIX,UAAU,4EACX,iEADH;;AAGA,QAAIY,aAAa,QAAOA,UAAU,CAAV,CAAP,MAAyB,QAA1C,EAAoD;AAClDZ,iBAAW,oBAAoBa,KAAKC,SAAL,CAAeF,UAAU,CAAV,CAAf,EAA6B,IAA7B,EAAmC,CAAnC,CAA/B;AACD;;AAEDd,WAAOiB,IAAP,CAAYf,OAAZ;AACD,GATD;;AAWA,MAAMgB,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,QAAI,CAAC,aAAGC,UAAH,CAAcZ,mBAAd,CAAL,EAAyC;AACvC,mBAAGa,aAAH,CAAiBb,mBAAjB,EAAsC,IAAtC;AACD;AACD,WAAOQ,KAAKM,KAAL,CAAW,aAAGC,YAAH,CAAgBf,mBAAhB,CAAX,CAAP;AACD,GALD;;AAOA,MAAMgB,sBAAsB,SAAtBA,mBAAsB,GAAM;AAChC,iBAAGH,aAAH,CAAiBb,mBAAjB,EAAsCQ,KAAKC,SAAL,CAAeJ,cAAf,CAAtC;AACD,GAFD;;AAIA,MAAMY,oBAAoB,SAApBA,iBAAoB,cAAe;AACvC,qBAAEC,IAAF,CAAOd,WAAP,EAAqB,sBAAc;AAAA,UACzBe,IADyB,GACAzC,UADA,CACzByC,IADyB;AAAA,UACnBC,KADmB,GACA1C,UADA,CACnB0C,KADmB;AAAA,UACZC,OADY,GACA3C,UADA,CACZ2C,OADY;;AAEjChB,qBAAec,IAAf,IAAuB,EAAEC,YAAF,EAASC,gBAAT,EAAvB;AACD,KAHD;AAIAL;AACD,GAND;;AAQA,MAAMM,sBAAsB,SAAtBA,mBAAsB,GAAM;AAChCjB,qBAAiB,EAAjB;AACAW;AACD,GAHD;;AAKA,MAAMO,WAAW,SAAXA,QAAW,CAAC7C,UAAD,EAAgB;AAC/B,QAAI,CAACA,UAAD,IAAe,CAACA,WAAWyC,IAA/B,EAAqC;AACnC1B,aAAOC,KAAP,CAAa,uCAAb;AACA,aAAO,KAAP;AACD;;AAED,QAAI,CAAChB,WAAW8C,OAAhB,EAAyB;AACvB/B,aAAOC,KAAP,CAAa,mCAAb;AACA,aAAO,KAAP;AACD;;AAED,QAAI,CAAChB,WAAWO,IAAZ,IAAqBP,WAAWO,IAAX,KAAoB,UAApB,IAAkCP,WAAWO,IAAX,KAAoB,UAA/E,EAA4F;AAC1FQ,aAAOC,KAAP,CAAa,sDAAb;AACA,aAAO,KAAP;AACD;;AAEDhB,eAAW0C,KAAX,GAAmB1C,WAAW0C,KAAX,IAAoB,CAAvC;AACA1C,eAAW2C,OAAX,GAAqB,OAAO3C,WAAW2C,OAAlB,KAA8B,WAA9B,GAA4C,IAA5C,GAAkD,CAAC,CAAC3C,WAAW2C,OAApF;;AAEA,QAAI,iBAAEI,IAAF,CAAOrB,WAAP,EAAoB;AAAA,aAAKsB,EAAEP,IAAF,KAAWzC,WAAWyC,IAA3B;AAAA,KAApB,CAAJ,EAA0D;AACxD1B,aAAOC,KAAP,CAAa,mEAAb;AACA,aAAO,KAAP;AACD;;AAEDU,gBAAYuB,IAAZ,CAAiBjD,UAAjB;AACD,GAzBD;;AA2BA,MAAMkD,OAAO,SAAPA,IAAO,GAAM;AACjB,WAAO,iBAAEC,OAAF,CAAUzB,YAAY0B,GAAZ,CAAgB,sBAAc;AAC7C,UAAMC,gBAAgB1B,eAAe3B,WAAWyC,IAA1B,CAAtB;AACA,UAAIY,aAAJ,EAAmB;AACjB,eAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBvD,UAAlB,EAA8BqD,aAA9B,CAAP;AACD;AACD,aAAOrD,UAAP;AACD,KANgB,CAAV,EAMH,OANG,CAAP;AAOD,GARD;;AAUA,MAAMwD,OAAO,SAAPA,IAAO,GAAM;AACjBhC,eAAW9B,iBAAiBC,EAAjB,EAAqB,UAArB,CAAX;AACA8B,eAAW/B,iBAAiBC,EAAjB,EAAqB,UAArB,CAAX;;AAFiB,qBAIyB,yBAAU0B,eAAV,CAJzB;AAAA,QAIGoC,iBAJH,cAITzD,UAJS;;AAKjBwB,aAASzB,GAAT,CAAa0D,iBAAb;;AAEA,qBAAEjB,IAAF,CAAOU,MAAP,EAAgB,aAAK;AACnB,UAAI,CAACF,EAAEL,OAAP,EAAgB;AACd,eAAO5B,OAAO2C,KAAP,CAAa,sBAAb,EAAqCV,EAAEP,IAAvC,EAA6C,oBAA7C,CAAP;AACD;;AAED1B,aAAO2C,KAAP,CAAa,qBAAb,EAAoCV,EAAEP,IAAtC;;AAEA,UAAIO,EAAEzC,IAAF,KAAW,UAAf,EAA2B;AACzBiB,iBAASzB,GAAT,CAAaiD,EAAEF,OAAf;AACD,OAFD,MAEO;AACLrB,iBAAS1B,GAAT,CAAaiD,EAAEF,OAAf;AACD;AACF,KAZD;AAaD,GApBD;;AAsBA,MAAMa,mBAAmB,SAAnBA,gBAAmB;AAAA,WAAQ,iBAAS;AACxC,UAAIC,KAAKrD,SAAS,UAAT,GAAsBiB,QAAtB,GAAiCC,QAA1C;AACAmC,SAAGzD,QAAH,GAAcyD,GAAGzD,QAAH,CAAYC,KAAZ,CAAd,GAAmCwD,GAAGxD,KAAH,CAAnC;AACD,KAHwB;AAAA,GAAzB;;AAKA,MAAMyD,eAAeF,iBAAiB,UAAjB,CAArB;AACA,MAAMG,eAAeH,iBAAiB,UAAjB,CAArB;;AAEAnC,aAAWC,WAAWG,SAAtB;AACAF,gBAAc,EAAd;AACAC,mBAAiBM,oBAAjB;;AAEA,SAAO;AACLuB,cADK;AAELN,cAFK;AAGLL,sBAHK;AAILgB,8BAJK;AAKLC,8BALK;AAMLC,uBAAmB;AAAA,aAAMpC,cAAN;AAAA,KANd;AAOLY,wCAPK;AAQLK;AARK,GAAP;AAUD,CAxHD","file":"middlewares.js","sourcesContent":["import _ from 'lodash'\nimport mware from 'mware'\nimport path from 'path'\nimport fs from 'fs'\n\nimport licensing from './licensing'\n\nconst createMiddleware = function(bp, middlewareName) {\n  const _use = mware()\n  const _error = mware()\n\n  const use = function(middleware) {\n    if (typeof(middleware) !== 'function') {\n      throw new TypeError('Expected all middleware arguments to be functions')\n    }\n\n    if (middleware.length === 2) {\n      _use(middleware)\n    } else if (middleware.length === 3) {\n      _error(middleware)\n    }\n  }\n\n  const dispatch = function(event) {\n    if (!_.isPlainObject(event)) {\n      throw new TypeError('Expected all dispatch arguments to be plain event objects')\n    }\n\n    const conformity = {\n      type: function(value) { return typeof(value) === 'string' },\n      platform: function(value) { return typeof(value) === 'string' },\n      text: function(value) { return typeof(value) === 'string' },\n      raw: function() { return true }\n    }\n\n    if (!_.conformsTo(event, conformity)) {\n      throw new TypeError('Expected event to contain (type: string), ' +\n        '(platform: string), (text: string), (raw: any)')\n    }\n\n    // Provide botpress to the event handlers\n    event.bp = bp\n\n    _use.run(event, function(err) {\n      if (err) {\n        _error.run(err, event, () => {\n          bp.logger.error(`[BOTPRESS] Unhandled error in middleware (${middlewareName}). Error: ${err.message}`)\n        })\n      }\n    })\n  }\n\n  return { use, dispatch }\n}\n\nmodule.exports = function(bp, dataLocation, projectLocation, logger) {\n  const middlewaresFilePath = path.join(dataLocation, 'middlewares.json')\n  let incoming, outgoing, middlewares, customizations\n\n  const noopChain = function() {\n    let message = 'Middleware called before middlewares have been loaded. This is a no-op.'\n     + ' Have you forgotten to call `bp.loadMiddlewares()` in your bot?'\n\n    if (arguments && typeof(arguments[0]) === 'object') {\n      message += '\\nCalled with: ' + JSON.stringify(arguments[0], null, 2)\n    }\n\n    logger.warn(message)\n  }\n\n  const readCustomizations = () => {\n    if (!fs.existsSync(middlewaresFilePath)) {\n      fs.writeFileSync(middlewaresFilePath, '{}')\n    }\n    return JSON.parse(fs.readFileSync(middlewaresFilePath))\n  }\n\n  const writeCustomizations = () => {\n    fs.writeFileSync(middlewaresFilePath, JSON.stringify(customizations))\n  }\n\n  const setCustomizations = middlewares => {\n    _.each(middlewares, (middleware => {\n      const { name, order, enabled } = middleware\n      customizations[name] = { order, enabled }\n    }))\n    writeCustomizations()\n  }\n\n  const resetCustomizations = () => {\n    customizations = {}\n    writeCustomizations()\n  }\n\n  const register = (middleware) => {\n    if (!middleware || !middleware.name) {\n      logger.error('A unique middleware name is mandatory')\n      return false\n    }\n\n    if (!middleware.handler) {\n      logger.error('A middleware handler is mandatory')\n      return false\n    }\n\n    if (!middleware.type || (middleware.type !== 'incoming' && middleware.type !== 'outgoing')) {\n      logger.error('A middleware type (incoming or outgoing) is required')\n      return false\n    }\n\n    middleware.order = middleware.order || 0\n    middleware.enabled = typeof middleware.enabled === 'undefined' ? true: !!middleware.enabled\n\n    if (_.some(middlewares, m => m.name === middleware.name)) {\n      logger.error('Another middleware with the same name has already been registered')\n      return false\n    }\n\n    middlewares.push(middleware)\n  }\n\n  const list = () => {\n    return _.orderBy(middlewares.map(middleware => {\n      const customization = customizations[middleware.name]\n      if (customization) {\n        return Object.assign({}, middleware, customization)\n      }\n      return middleware\n    }), 'order')\n  }\n\n  const load = () => {\n    incoming = createMiddleware(bp, 'incoming')\n    outgoing = createMiddleware(bp, 'outgoing')\n\n    const { middleware: licenseMiddleware } = licensing(projectLocation)\n    incoming.use(licenseMiddleware)\n\n    _.each(list(), (m => {\n      if (!m.enabled) {\n        return logger.debug('SKIPPING middleware:', m.name, ' [Reason=disabled]')\n      }\n\n      logger.debug('Loading middleware:', m.name)\n\n      if (m.type === 'incoming') {\n        incoming.use(m.handler)\n      } else {\n        outgoing.use(m.handler)\n      }\n    }))\n  }\n\n  const sendToMiddleware = type => event => {\n    let mw = type === 'incoming' ? incoming : outgoing\n    mw.dispatch ? mw.dispatch(event) : mw(event)\n  }\n\n  const sendIncoming = sendToMiddleware('incoming')\n  const sendOutgoing = sendToMiddleware('outgoing')\n\n  incoming = outgoing = noopChain\n  middlewares = []\n  customizations = readCustomizations()\n\n  return {\n    load,\n    list,\n    register,\n    sendIncoming,\n    sendOutgoing,\n    getCustomizations: () => customizations,\n    setCustomizations,\n    resetCustomizations\n  }\n}\n"]}