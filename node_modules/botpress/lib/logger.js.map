{"version":3,"sources":["../src/logger.js"],"names":["module","exports","dataLocation","logConfig","logger","Logger","level","transports","Console","prettyPrint","colorize","timestamp","format","enableFileTransport","logFile","join","file","add","File","filename","maxsize","maxSize","archiveToFile","resolve","disableFileLogs"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,YAAD,EAAeC,SAAf,EAA6B;AAC5C,MAAMC,SAAS,IAAI,kBAAQC,MAAZ,CAAmB;AAChCC,WAAO,qBAAe,OAAf,GAAyB,MADA;AAEhCC,gBAAY,CACV,IAAK,kBAAQA,UAAR,CAAmBC,OAAxB,CAAiC;AAC/BC,mBAAa,IADkB;AAE/BC,gBAAU,IAFqB;AAG/BC,iBAAW;AAAA,eAAM,wBAASC,MAAT,CAAgB,UAAhB,CAAN;AAAA;AAHoB,KAAjC,CADU;AAFoB,GAAnB,CAAf;;AAWAR,SAAOS,mBAAP,GAA6B,YAAM;AACjC,QAAMC,UAAU,eAAKC,IAAL,CAAUb,YAAV,EAAwBC,UAAUa,IAAlC,CAAhB;;AAEAZ,WAAOa,GAAP,CAAW,kBAAQV,UAAR,CAAmBW,IAA9B,EAAoC;AAClCC,gBAAUL,OADwB;AAElCM,eAASjB,UAAUkB;AAFe,KAApC;AAID,GAPD;;AASAjB,SAAOkB,aAAP,GAAuB,YAAM;AAC3B,QAAMR,UAAU,eAAKC,IAAL,CAAUb,YAAV,EAAwBC,UAAUa,IAAlC,CAAhB;;AAEA,WAAO,mBAAQO,OAAR,CAAgBT,OAAhB,CAAP;AACD,GAJD;;AAMA,MAAI,CAACX,UAAUqB,eAAf,EAAgC;AAC9BpB,WAAOS,mBAAP;AACD;;AAED,SAAOT,MAAP;AACD,CAhCD","file":"logger.js","sourcesContent":["import winston from 'winston'\nimport path from 'path'\nimport Promise from 'bluebird'\nimport moment from 'moment'\n\nimport { isDeveloping } from './util'\n\nmodule.exports = (dataLocation, logConfig) => {\n  const logger = new winston.Logger({\n    level: isDeveloping ? 'debug' : 'info',\n    transports: [\n      new (winston.transports.Console)({\n        prettyPrint: true,\n        colorize: true,\n        timestamp: () => moment().format('HH:mm:ss')\n      })\n    ]\n  })\n\n  logger.enableFileTransport = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n\n    logger.add(winston.transports.File, {\n      filename: logFile,\n      maxsize: logConfig.maxSize\n    })\n  }\n\n  logger.archiveToFile = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n\n    return Promise.resolve(logFile)\n  }\n\n  if (!logConfig.disableFileLogs) {\n    logger.enableFileTransport()\n  }\n\n  return logger\n}\n"]}