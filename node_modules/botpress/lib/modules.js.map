{"version":3,"sources":["../src/modules.js"],"names":["MODULES_URL","POPULAR_URL","FEATURED_URL","FETCH_TIMEOUT","module","exports","logger","projectLocation","dataLocation","kvs","log","level","args","apply","fetchAllModules","get","timeout","then","data","catch","error","fetchPopular","fetchFeatured","loadModules","moduleDefinitions","botpress","loadedCount","loadedModules","forEach","loader","require","mod","entry","warn","name","handlers","configuration","botfile","options","config","err","init","info","scanModules","packagePath","join","existsSync","botPackage","deps","dependencies","merge","devDependencies","reduce","result","value","key","test","root","modulePackage","push","homepage","settings","getRandomCommunityHero","method","modulesCachePath","listAllCommunityModules","JSON","parse","readFileSync","modules","sample","username","github","avatar","contributions","hero","contributors","login","html_url","avatar_url","mapModuleList","installed","listInstalledModules","map","stars","stargazers_count","forks","forks_count","docLink","version","latest","keywords","fullName","full_name","updated","updated_at","issues","open_issues_count","icon","package","menuIcon","description","includes","license","author","writeFileSync","stringify","diff","props","newModules","popular","featured","length","debug","Date","listPopularCommunityModules","filter","m","listFeaturedCommunityModules","resolveModuleNames","names","TypeError","basename","prefix","substr","replace","Error","runSpawn","command","resolve","reject","stdout","on","toString","stderr","code","installModules","install","cwd","uninstallModules","uninstall","prodDeps","keys","dep","listInstalled","_scan","_load"],"mappings":"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","file":"modules.js","sourcesContent":["import { spawn } from 'child_process'\nimport path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nimport { createConfig } from './configurator'\n\nimport {\n  print,\n  isDeveloping,\n  npmCmd,\n  resolveModuleRootPath,\n  resolveFromDir,\n  resolveProjectFile\n} from './util'\n\nconst MODULES_URL = 'https://s3.amazonaws.com/botpress-io/all-modules.json'\nconst POPULAR_URL = 'https://s3.amazonaws.com/botpress-io/popular-modules.json'\nconst FEATURED_URL = 'https://s3.amazonaws.com/botpress-io/featured-modules.json'\nconst FETCH_TIMEOUT = 5000\n\nmodule.exports = (logger, projectLocation, dataLocation, kvs) => {\n\n  const log = (level, ...args) => {\n    if (logger && logger[level]) {\n      logger[level].apply(this, args)\n    } else {\n      print.apply(this, [level, ...args])\n    }\n  }\n\n  const fetchAllModules = () => {\n    return axios.get(MODULES_URL, { timeout: FETCH_TIMEOUT })\n    .then(({ data }) => data)\n    .catch(() => logger.error('Could not fetch modules'))\n  }\n\n  const fetchPopular = () => {\n    return axios.get(POPULAR_URL, { timeout: FETCH_TIMEOUT })\n    .then(({ data }) => data)\n    .catch(() => logger.error('Could not fetch popular modules'))\n  }\n\n  const fetchFeatured = () => {\n    return axios.get(FEATURED_URL, { timeout: FETCH_TIMEOUT })\n    .then(({ data }) => data)\n    .catch(() => logger.error('Could not fetch featured modules'))\n  }\n\n  const loadModules = (moduleDefinitions, botpress) => {\n    let loadedCount = 0\n    const loadedModules = {}\n\n    moduleDefinitions.forEach(mod => {\n      const loader = require(mod.entry)\n\n      if (typeof loader !== 'object') {\n        return logger.warn(`Ignoring module ${mod.name}. Invalid entry point signature.`)\n      }\n\n      mod.handlers = loader\n\n      try {\n        mod.configuration = createConfig({\n          kvs: kvs,\n          name: mod.name,\n          botfile: botpress.botfile,\n          options: loader.config || {}\n        })\n      } catch (err) {\n        logger.error(`Invalid module configuration in module ${mod.name}:`, err)\n      }\n\n      try {\n        loader.init && loader.init(botpress, mod.configuration)\n      } catch (err) {\n        logger.warn('Error during module initialization: ', err)\n      }\n\n      loadedModules[mod.name] = mod\n      loadedCount++\n    })\n\n    if (loadedCount > 0) {\n      logger.info(`Loaded ${loadedCount} modules`)\n    }\n\n    return loadedModules\n  }\n\n  const scanModules = () => {\n    const packagePath = path.join(projectLocation, 'package.json')\n\n    if (!fs.existsSync(packagePath)) {\n      return logger.warn('No package.json found at project root, ' +\n        'which means botpress can\\'t load any module for the bot.')\n    }\n\n    const botPackage = require(packagePath)\n\n    let deps = botPackage.dependencies || {}\n    if (isDeveloping) {\n      deps = _.merge(deps, botPackage.devDependencies || {})\n    }\n\n    return _.reduce(deps, (result, value, key) => {\n      if (!/^botpress-/i.test(key)) {\n        return result\n      }\n      const entry = resolveFromDir(projectLocation, key)\n      if (!entry) {\n        return result\n      }\n      const root = resolveModuleRootPath(entry)\n      if (!root) {\n        return result\n      }\n\n      const modulePackage = require(path.join(root, 'package.json'))\n      if (!modulePackage.botpress) {\n        return result\n      }\n\n      return result.push({\n        name: key,\n        root: root,\n        homepage: modulePackage.homepage,\n        settings: modulePackage.botpress,\n        entry: entry\n      }) && result\n    }, [])\n  }\n\n  const getRandomCommunityHero = Promise.method(() => {\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n\n    return listAllCommunityModules()\n    .then(() => {\n      const { modules } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n      const module = _.sample(modules)\n\n      if (!module) {\n        return {\n          username: 'danyfs',\n          github: 'https://github.com/danyfs',\n          avatar: 'https://avatars1.githubusercontent.com/u/5629987?v=3',\n          contributions: 'many',\n          module: 'botpress'\n        }\n      }\n\n      const hero = _.sample(module.contributors)\n\n      return {\n        username: hero.login,\n        github: hero.html_url,\n        avatar: hero.avatar_url,\n        contributions: hero.contributions,\n        module: module.name\n      }\n    })\n  })\n\n  const mapModuleList = (modules) => {\n    const installed = listInstalledModules()\n    return modules.map(mod => ({\n      name: mod.name,\n      stars: mod.github.stargazers_count,\n      forks: mod.github.forks_count,\n      docLink: mod.homepage,\n      version: mod['dist-tags'].latest,\n      keywords: mod.keywords,\n      fullName: mod.github.full_name,\n      updated: mod.github.updated_at,\n      issues: mod.github.open_issues_count,\n      icon: mod.package.botpress.menuIcon,\n      description: mod.description,\n      installed: _.includes(installed, mod.name),\n      license: mod.license,\n      author: mod.author.name\n    }))\n  }\n\n  const listAllCommunityModules = Promise.method(() => {\n\n    if (!fs) {\n      return [] // TODO Fetch & return\n    }\n\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n    if (!fs.existsSync(modulesCachePath)) {\n      fs.writeFileSync(modulesCachePath, JSON.stringify({\n        modules: [],\n        updated: null\n      }))\n    }\n\n    const { modules, updated } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n    if (updated && moment().diff(moment(updated), 'minutes') <= 30) {\n      return mapModuleList(modules)\n    }\n\n    return Promise.props({\n      newModules: fetchAllModules(),\n      popular: fetchPopular(),\n      featured: fetchFeatured()\n    })\n    .then(({ newModules, featured, popular }) => {\n\n      if (!newModules || !featured || !popular || !newModules.length || !featured.length || !popular.length) {\n        if (modules.length > 0) {\n          logger.debug('Fetched invalid modules. Report this to the Botpress Team.')\n          return mapModuleList(modules)\n        } else {\n          newModules = newModules || []\n          popular = popular || []\n          featured = featured || []\n        }\n      }\n\n      fs.writeFileSync(modulesCachePath, JSON.stringify({\n        modules: newModules,\n        popular: popular,\n        featured: featured,\n        updated: new Date()\n      }))\n\n      return mapModuleList(newModules)\n    })\n  })\n\n  const listPopularCommunityModules = Promise.method(() => {\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n\n    return listAllCommunityModules()\n    .then(modules => {\n      const { popular } = JSON.parse(fs.readFileSync(modulesCachePath))\n      return _.filter(modules, m => _.includes(popular, m.name))\n    })\n  })\n\n  const listFeaturedCommunityModules = Promise.method(() => {\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n\n    return listAllCommunityModules()\n    .then(modules => {\n      const { featured } = JSON.parse(fs.readFileSync(modulesCachePath))\n      return _.filter(modules, m => _.includes(featured, m.name))\n    })\n  })\n\n  const resolveModuleNames = (names) => {\n    return names.map(name => {\n      if (!name || typeof(name) !== 'string') {\n        throw new TypeError('Expected module name to be a string')\n      }\n\n      let basename = path.basename(name)\n      let prefix = ''\n\n      if (basename !== name) {\n        prefix = name.substr(0, name.length - basename.length - 1)\n      }\n\n      if (basename.replace(/botpress-?/i, '').length === 0) {\n        throw new Error(`Invalid module name: ${basename}`)\n      }\n\n      if (!/^botpress-/i.test(basename)) {\n        basename = `botpress-${basename}`\n      }\n\n      return prefix + basename\n    })\n  }\n\n  const runSpawn = (command) => {\n    return new Promise((resolve, reject) => {\n      command.stdout.on('data', (data) => {\n        log('info', data.toString())\n      })\n\n      command.stderr.on('data', (data) => {\n        log('error', data.toString())\n      })\n\n      command.on('close', (code) => {\n        if (code > 0) {\n          reject()\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  const installModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n\n    const install = spawn(npmCmd, ['install', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', 'Installing modules: ' + modules.join(', '))\n\n    return runSpawn(install)\n    .then(() => log('success', 'Modules successfully installed'))\n    .catch(err => {\n      log('error', 'An error occured during modules installation.')\n      throw err\n    })\n  })\n\n  const uninstallModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n    const uninstall = spawn(npmCmd, ['uninstall', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', `Uninstalling modules: ${modules.join(', ')}`)\n\n    return runSpawn(uninstall)\n    .then(() => log('success', 'Modules successfully removed'))\n    .catch(err => {\n      log('error', 'An error occured during modules removal.')\n      throw err\n    })\n  })\n\n\n  const listInstalledModules = () => {\n    const packagePath = resolveProjectFile('package.json', projectLocation, true)\n    const { dependencies } = JSON.parse(fs.readFileSync(packagePath))\n    const prodDeps = _.keys(dependencies)\n\n    return _.filter(prodDeps, dep => /botpress-.+/i.test(dep))\n  }\n\n  return {\n    listAllCommunityModules,\n    listPopularCommunityModules,\n    listFeaturedCommunityModules,\n    getRandomCommunityHero,\n    install: installModules,\n    uninstall: uninstallModules,\n    listInstalled: listInstalledModules,\n    _scan: scanModules,\n    _load: loadModules\n  }\n}\n"]}