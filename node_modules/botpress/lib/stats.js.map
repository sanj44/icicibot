{"version":3,"sources":["../src/stats.js"],"names":["module","exports","botfile","visitor","queued","catch","hash","createHash","update","arch","hostname","platform","type","digest","then","mid","strictCidFormat","forEach","a","track","category","action","label","value","optOutStats","push","event","trackException","message"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,OAAD,EAAa;;AAE5B,MAAIC,UAAU,IAAd;AACA,MAAIC,SAAS,EAAb;;AAEA,kCACCC,KADD,CACO,YAAM;AACX,QAAMC,OAAO,iBAAOC,UAAP,CAAkB,QAAlB,CAAb;AACAD,SAAKE,MAAL,CAAY,aAAGC,IAAH,KAAY,aAAGC,QAAH,EAAZ,GAA4B,aAAGC,QAAH,EAA5B,GAA4C,aAAGC,IAAH,EAAxD;AACA,WAAON,KAAKO,MAAL,CAAY,KAAZ,CAAP;AACD,GALD,EAMCC,IAND,CAMM,eAAO;AACXX,cAAU,kCAAG,eAAH,EAAoBY,GAApB,EAAyB,EAAEC,iBAAiB,KAAnB,EAAzB,CAAV;AACAZ,WAAOa,OAAP,CAAe;AAAA,aAAKC,GAAL;AAAA,KAAf;AACAd,aAAS,EAAT;AACD,GAVD;;AAYA,MAAMe,QAAQ,SAARA,KAAQ,CAACC,QAAD,EAAWC,MAAX,EAAkD;AAAA,QAA/BC,KAA+B,uEAAvB,IAAuB;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AAC9D,QAAI,CAAC,CAACrB,QAAQsB,WAAd,EAA2B;AACzB,aADyB,CAClB;AACR;;AAED,QAAI,CAACrB,OAAL,EAAc;AACZC,aAAOqB,IAAP,CAAY;AAAA,eAAMN,MAAMC,QAAN,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,KAA/B,CAAN;AAAA,OAAZ;AACA;AACD;;AAEDpB,YAAQuB,KAAR,CAAcN,QAAd,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8C,YAAM,CAAE,mBAAqB,CAA3E;AACD,GAXD;;AAaA,MAAMI,iBAAiB,SAAjBA,cAAiB,UAAW;AAChC,QAAI,CAAC,CAACzB,QAAQsB,WAAd,EAA2B;AACzB,aADyB,CAClB;AACR;;AAED,QAAI,CAACrB,OAAL,EAAc;AACZC,aAAOqB,IAAP,CAAY;AAAA,eAAME,eAAeC,OAAf,CAAN;AAAA,OAAZ;AACA;AACD;;AAEDzB,YAAQuB,KAAR,CAAcE,OAAd,EAAuB,YAAM,CAAE,mBAAqB,CAApD;AACD,GAXD;;AAaA,SAAO,EAAET,YAAF,EAASQ,8BAAT,EAAP;AACD,CA5CD","file":"stats.js","sourcesContent":["import os from 'os'\nimport crypto from 'crypto'\nimport ua from 'universal-analytics'\nimport { machineId } from 'node-machine-id'\n\nmodule.exports = (botfile) => {\n\n  let visitor = null\n  let queued = []\n\n  machineId()\n  .catch(() => {\n    const hash = crypto.createHash('sha256')\n    hash.update(os.arch() + os.hostname() + os.platform() + os.type())\n    return hash.digest('hex')\n  })\n  .then(mid => {\n    visitor = ua('UA-90044826-1', mid, { strictCidFormat: false })\n    queued.forEach(a => a())\n    queued = []\n  })\n\n  const track = (category, action, label = null, value = null) => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => track(category, action, label, value))\n      return\n    }\n\n    visitor.event(category, action, label, value, () => { /* ignore errors */ })\n  }\n\n  const trackException = message => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => trackException(message))\n      return\n    }\n\n    visitor.event(message, () => { /* ignore errors */ })\n  }\n\n  return { track, trackException }\n}\n"]}